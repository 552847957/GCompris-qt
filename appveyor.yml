version: 1.0.{build}
branches:
  only:
  - KDE/0.70
  - 0.71
skip_tags: true
image: Visual Studio 2015
configuration: Release
platform:
  - x86
init:
- cmd: 
environment:
  CMAKE_GENERATOR: Visual Studio 12
  QT5: C:\Qt\5.5\msvc2013


before_build:
  # Workaround for CMake not wanting sh.exe on PATH for MinGW
  - set PATH=%PATH:C:\Program Files (x86)\Git\usr\bin;=%
  - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - set PATH=C:\MinGW\bin;%QT5%\bin;%PATH%

install:

- cmd: >-
    if "%platform%"=="x86" set CMAKE_GENERATOR=MinGW Makefiles

    if "%platform%"=="x86" set QT5=C:\Qt\5.5\mingw492_32

    if "%platform%"=="x64" set CMAKE_GENERATOR=Visual Studio 12 2013 Win64

    if "%platform%"=="x64" set QT5=C:\Qt\5.5\msvc2013_64

    cmake -H. -Bbuild -G "%CMAKE_GENERATOR%" -DCMAKE_SYSTEM_VERSION=10.0 "-DCMAKE_PREFIX_PATH=%QT5%" -DACTIVATION_MODE=internal -DVCREDIST_DIR="build"

    cmake --build build --config RelWithDebInfo --target DlAndInstallBundledConvertedOggs

    cmake -H. -Bbuild -G "%CMAKE_GENERATOR%" -DCMAKE_SYSTEM_VERSION=10.0 "-DCMAKE_PREFIX_PATH=%QT5%" -DACTIVATION_MODE=internal -DVCREDIST_DIR="build"

    cmake --build build --config RelWithDebInfo

    cmake --build build --config RelWithDebInfo --target DlAndInstallBundledTranslations

    cmake --build build --config RelWithDebInfo --target package
build: off
artifacts:
- path: build/*.exe
deploy:
- provider: FTP
  host: gcompris.net
  protocol: sftp
  username: releaser
  password:
    secure: kt7OLxDoaFlmFwDtcGfa/X3uVhQj0y1q2YVdBroxp9U=
  folder: www
